[33mCMake Warning (dev) at CMakeLists.txt:19 (add_executable):
  Policy CMP0115 is not set: Source file extensions must be explicit.  Run
  "cmake --help-policy CMP0115" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  File:

    /home/andy/CRIMP/src/crimp_cpp/src/joint_mover.cpp
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
[33mCMake Warning (dev) at CMakeLists.txt:22 (add_executable):
  Policy CMP0115 is not set: Source file extensions must be explicit.  Run
  "cmake --help-policy CMP0115" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  File:

    /home/andy/CRIMP/src/crimp_cpp/src/motion_planner.cpp
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
[33mCMake Warning (dev) at CMakeLists.txt:25 (add_executable):
  Policy CMP0115 is not set: Source file extensions must be explicit.  Run
  "cmake --help-policy CMP0115" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  File:

    /home/andy/CRIMP/src/crimp_cpp/src/suction_cups.cpp
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/joint_mover.cpp:[m[K In member function â€˜[01m[Kvoid JointMover::[01;32m[Ktimer_callback[m[K()[m[Kâ€™:
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/joint_mover.cpp:55:27:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K(((JointMover*)this)->JointMover::count_ * 10)[m[Kâ€™ from â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
   55 |     msg.position = {[01;35m[Kcount_*10[m[K};
      |                     [01;35m[K~~~~~~^~~[m[K
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/joint_mover.cpp:55:27:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K(((JointMover*)this)->JointMover::count_ * 10)[m[Kâ€™ from â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/joint_mover.cpp:[m[K In member function â€˜[01m[Kvoid JointMover::[01;32m[Ksub_callback[m[K(const sensor_msgs::msg::JointState&)[m[Kâ€™:
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/joint_mover.cpp:61:10:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kpos[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
   61 |     auto [01;35m[Kpos[m[K = to_string(msg.position[0]).c_str();
      |          [01;35m[K^~~[m[K
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/motion_planner.cpp:[m[K In lambda function:
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/motion_planner.cpp:51:14:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kcup_1[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
   51 |         auto [01;35m[Kcup_1[m[K = to_string(request_msg.cup_1).c_str();
      |              [01;35m[K^~~~~[m[K
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/motion_planner.cpp:52:14:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kcup_2[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
   52 |         auto [01;35m[Kcup_2[m[K = to_string(request_msg.cup_2).c_str();
      |              [01;35m[K^~~~~[m[K
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/motion_planner.cpp:[m[K In member function â€˜[01m[Kvoid MotionPlanner::[01;32m[Ktimer_callback[m[K()[m[Kâ€™:
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/motion_planner.cpp:71:28:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K((MotionPlanner*)this)->MotionPlanner::count_[m[Kâ€™ from â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
   71 |     target_msg.position = {[01;35m[Kcount_[m[K};
      |                            [01;35m[K^~~~~~[m[K
[01m[K/home/andy/CRIMP/src/crimp_cpp/src/motion_planner.cpp:71:28:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[K((MotionPlanner*)this)->MotionPlanner::count_[m[Kâ€™ from â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
